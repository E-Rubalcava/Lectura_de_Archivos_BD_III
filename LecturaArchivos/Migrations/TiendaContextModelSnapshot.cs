// <auto-generated />
using System;
using LecturaArchivos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LecturaArchivos.Migrations
{
    [DbContext(typeof(TiendaContext))]
    partial class TiendaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LecturaArchivos.Entidades.Cliente", b =>
                {
                    b.Property<string>("CodCli")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodCli");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.Producto", b =>
                {
                    b.Property<string>("CodProd")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CodProd");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.Venta", b =>
                {
                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<string>("CodCli")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Folio");

                    b.HasIndex("CodCli");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.VentasDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("CodProd")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<decimal>("Importe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CodProd");

                    b.HasIndex("Folio");

                    b.ToTable("VentasDetalles");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.Venta", b =>
                {
                    b.HasOne("LecturaArchivos.Entidades.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("CodCli")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.VentasDetalle", b =>
                {
                    b.HasOne("LecturaArchivos.Entidades.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("CodProd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LecturaArchivos.Entidades.Venta", "Venta")
                        .WithMany("VentasDetalles")
                        .HasForeignKey("Folio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("LecturaArchivos.Entidades.Venta", b =>
                {
                    b.Navigation("VentasDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
